// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Context;

namespace Repository.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20201114220801_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entity.Customer", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("VARCHAR(14)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.HasKey("Codigo");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Domain.Entity.Order", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DATETIME");

                    b.Property<long?>("Order_CustomerCodigo")
                        .HasColumnType("bigint");

                    b.HasKey("Codigo");

                    b.HasIndex("Order_CustomerCodigo");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Domain.Entity.Product", b =>
                {
                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<long?>("Product_OrderCodigo")
                        .HasColumnType("bigint");

                    b.Property<double>("Valor")
                        .HasColumnType("DOUBLE");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoBarras")
                        .IsUnique();

                    b.HasIndex("Product_OrderCodigo");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Domain.Entity.Order", b =>
                {
                    b.HasOne("Domain.Entity.Customer", "Order_Customer")
                        .WithMany("Customer_Orders")
                        .HasForeignKey("Order_CustomerCodigo")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Domain.Entity.Product", b =>
                {
                    b.HasOne("Domain.Entity.Order", "Product_Order")
                        .WithMany("Order_Products")
                        .HasForeignKey("Product_OrderCodigo")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
